configurations {
    ktlint
}

def versions = [
        jacoco : "0.7.8",
        jackson: "2.9.8",
        stupsOAuthVersion: "1.0.15",
        hibernateVersion: "5.2.18.Final",
]

buildscript {

    ext {
        kotlin_version = '1.3.21'
        spring_boot_version = '1.5.19.RELEASE'
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
        classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlin_version")
        classpath("org.jetbrains.kotlin:kotlin-noarg:$kotlin_version")
        classpath('com.github.ben-manes:gradle-versions-plugin:0.20.0')
        classpath('de.undercouch:gradle-download-task:3.4.3')
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'

    repositories {
        jcenter()
        mavenCentral()
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
}

apply plugin: 'kotlin-jpa'
apply plugin: 'kotlin-spring'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'de.undercouch.download'

wrapper {
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion = '5.3.1'
}

jar {
    baseName = "bark"
    version = "1.0.0"
    archiveName = "bark.jar"
}

dependencies {
    compile("org.kohsuke:github-api:1.86")
    compile("io.swagger:swagger-parser:1.0.28")
    compile("com.github.java-json-tools:json-schema-validator:2.2.8")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-undertow")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.thymeleaf:thymeleaf-spring4")
    compile("org.flywaydb:flyway-core:4.1.2")
    compile("org.postgresql:postgresql:42.1.1")
    compile("org.hibernate:hibernate-core:${versions.hibernateVersion}")
    compile("org.hibernate:hibernate-entitymanager:${versions.hibernateVersion}")
    compile("org.jadira.usertype:usertype.core:6.0.1.GA")
    compile("com.fasterxml.jackson.module:jackson-module-parameter-names:${versions.jackson}")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${versions.jackson}")
    compile("org.zalando.stups:stups-spring-oauth2-server:1.0.18")
    compile("org.zalando:problem-spring-web:0.19.0")
    compile("org.zalando:twintip-spring-web:1.1.0")
    compile("org.zalando.zmon:zmon-actuator:0.9.7")
    compile("io.dropwizard.metrics:metrics-core:3.2.2")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${versions.jackson}")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:${versions.jackson}") {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-reflect"
    }
    compile("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.0")
    compile("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")
    compile("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")
    compile("io.github.openfeign:feign-core:9.5.1")
    compile("io.github.openfeign:feign-jackson:9.5.1")
    compile("org.zalando.stups.build:tokens-k8s-spring-boot-starter:0.1.1") {
        exclude group: "org.slf4j", module: "slf4j-simple"
    }
    compile("uk.co.datumedge:hamcrest-json:0.2")
    compile("org.postgresql:postgresql:42.1.4")
    compile("io.github.microutils:kotlin-logging:1.6.22")

    testCompile("ru.yandex.qatools.embed:postgresql-embedded:2.4")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile group: "org.mockito", name: "mockito-core", version: "1.10.19"
    testCompile("net.jadler:jadler-core:1.3.0")
    testCompile("net.jadler:jadler-jdk:1.3.0")
    testCompile("net.jadler:jadler-junit:1.3.0")
    testCompile("com.nhaarman:mockito-kotlin:1.6.0")

    ktlint("com.github.shyiko:ktlint:0.8.3")
}

jacoco {
    toolVersion = versions.jacoco
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

task ktlint(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

check.dependsOn jacocoTestReport
check.dependsOn ktlint

bootRun {
    jvmArgs = ["-Dspring.profiles.active=dev"]
}